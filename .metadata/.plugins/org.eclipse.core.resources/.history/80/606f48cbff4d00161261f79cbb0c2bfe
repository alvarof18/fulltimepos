package com.fulltimepos.controlador;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import com.fulltimepos.entidades.Clientes;
import com.fulltimepos.entidades.TipoContribuyente;
import com.fulltimepos.entidades.TipoIdentificacion;
import com.fulltimepos.modelo.ClienteServicios;
import com.fulltimepos.modelo.TipoContribuyenteServicios;
import com.fulltimepos.modelo.TipoIdentificacionServicios;
import com.fulltimepos.vista.ClientesSearch;
import com.fulltimepos.vista.ClientesView;


public class ControladorCliente implements ActionListener, MouseListener {
	
	 private ClienteServicios modelo;
	 private ClientesView vista;
	 
	 private ClientesSearch vistaBusqueda = new ClientesSearch();
	 
	 public String mensaje;
	
	 public ControladorCliente(ClienteServicios modelo, ClientesView vista){
		this.modelo = modelo;
		this.vista = vista;
		
		accionCampos(false);
		
		this.vista.btnGuardar.addActionListener(this);
		this.vista.btnGuardar.setActionCommand("Guardar");
		this.vista.btnGuardar.setEnabled(false);
		
		this.vista.btnNuevo.addActionListener(new ActionListener() {
					  public void actionPerformed(ActionEvent arg0){
						 accionCampos(true);
						 vista.btnGuardar.setEnabled(true);
						 vista.btnCancelar.setEnabled(true);
						 
					 }
					 });
							
		this.vista.btnEliminar.addActionListener(this);
		this.vista.btnEliminar.setActionCommand("Eliminar");
		this.vista.btnEliminar.setEnabled(false);
		
		this.vista.btnModificar.addActionListener(this);
		this.vista.btnModificar.setActionCommand("Modificar");
		this.vista.btnModificar.setEnabled(false);
		
		this.vista.btnBuscar.addActionListener(this);
		this.vista.btnBuscar.setActionCommand("Buscar");
		
		this.vista.btnCancelar.addActionListener(this);
		this.vista.btnCancelar.setActionCommand("Cancelar");
		this.vista.btnCancelar.setEnabled(false);
				
		this.cargarCombos();
		this.vista.setVisible(true);
		
		this.vistaBusqueda.tbResultado.addMouseListener(this);
		
		//Vista Buscar//
	 
		this.vistaBusqueda.btnBuscar.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent arg0){
				 buscarDatos();				 
			 }
			 });
	}

	protected void buscarDatos() {
		List<Clientes> lista = new ArrayList<Clientes>();
		Vector<Object> fila;
		
		//Limpiar los datos de la tabla
        for(int i=this.vistaBusqueda.dtm.getRowCount(); i>0; i--){
            this.vistaBusqueda.dtm.removeRow(i-1);
        }
        
		if(vistaBusqueda.cbBusqueda.getSelectedItem().equals("Seleccione") && vistaBusqueda.txtbusqueda.getText().equals("")){
			lista = modelo.lista();				
		}else if(vistaBusqueda.cbBusqueda.getSelectedItem().equals("Nombre")){
			lista = modelo.busquedaNombre(vistaBusqueda.txtbusqueda.getText().trim());
		} else if(vistaBusqueda.cbBusqueda.getSelectedItem().equals("Codigo")){
			int valor;
			try{
			   valor = Integer.parseInt(vistaBusqueda.txtbusqueda.getText().trim());	
			}
			catch(Exception ex){
			   valor = 0;
			}	
			Clientes cliente = modelo.buscarId(valor);
			if(cliente != null){
				lista.add(cliente);
			}
		}else if(vistaBusqueda.cbBusqueda.getSelectedItem().equals("Estado")){
			boolean estado= true;
			if(vistaBusqueda.txtbusqueda.getText().toLowerCase().equals("activo")){
			 estado = true;
			}else if(vistaBusqueda.txtbusqueda.getText().toLowerCase().equals("inactivo")){
				estado = false;
			}else{
				
			}
			lista = modelo.busquedaEstado(estado);
		}
		
		for(Clientes cl: lista){
			fila = new Vector<Object>();
			fila.add(cl.getClienteid());
			fila.add(cl.getNombre());
			fila.add(cl.getIdentificacion());
			if(cl.getEstado()){
				fila.add(new String("Activo"));
			}else{
				fila.add(new String("Inactivo"));
			}
			
			vistaBusqueda.dtm.addRow(fila);	
		}
		
	}

	@SuppressWarnings("unchecked")
	private void cargarCombos() {
		//Tipo Identificacion
		TipoIdentificacionServicios tipoIdentificacion = new TipoIdentificacionServicios();
		List<TipoIdentificacion> lista = new ArrayList<TipoIdentificacion>();
        lista = tipoIdentificacion.lista();
		this.vista.jcTIdentificacion.addItem("Seleccione");
		for(TipoIdentificacion ti:lista){
			this.vista.jcTIdentificacion.addItem(ti);
		}
		
		//Tipo Contribuyente
		TipoContribuyenteServicios tipoContribuyente = new TipoContribuyenteServicios();
		List<TipoContribuyente> listaContribuyente = new ArrayList<TipoContribuyente>();
		listaContribuyente = tipoContribuyente.lista();
		
		this.vista.jcTContribuyente.addItem("Seleccione");
		for(TipoContribuyente tc:listaContribuyente){
			this.vista.jcTContribuyente.addItem(tc);
		}
		
	}

	@Override
	public void actionPerformed(ActionEvent accion) {
		
		String comando = accion.getActionCommand();
		
		System.out.println("COMANDO " + comando);
		
		TipoIdentificacion tipoIdentificacion = new TipoIdentificacion();
		TipoContribuyente tipoContribuyente = new TipoContribuyente();
		
		switch (comando){
		
		case "Guardar":
			mensaje = "";
			boolean estado = true;
			
			
			if(vista.jcTIdentificacion.getSelectedItem().getClass().equals(TipoIdentificacion.class)){
				tipoIdentificacion = (TipoIdentificacion) vista.jcTIdentificacion.getSelectedItem();
			}else{
				mensaje = "Seleccione un tipo de Identificacion Valido";
			}
			
			if(mensaje.equals("") && vista.jcTContribuyente.getSelectedItem().getClass().equals(TipoContribuyente.class)){
				tipoContribuyente = (TipoContribuyente) vista.jcTContribuyente.getSelectedItem();
			}else if(mensaje.equals("")){
				   mensaje = "Seleccione un tipo de Contribuyente valido";
			}
			
			if(vista.cbxEstado.getSelectedIndex() != 0){
				
				if(vista.cbxEstado.getSelectedItem().equals("Activo")){
					estado = true;
				}else{
					estado=false;
				}
			}else{
				mensaje = "Seleccione un estado";
			}
				
			if(mensaje.equals("")){	
			   mensaje = this.modelo.guardar(vista.txtNombre.getText(), vista.txtRazonSocial.getText(), tipoIdentificacion, vista.txtIdentificacion.getText(), 
					                      vista.txtTelefono.getText(),vista.txtDireccion.getText(), vista.txtObservacion.getText(), vista.txtWeb.getText(), tipoContribuyente, 
					                      vista.cbCredito.isSelected(), vista.txtLimite.getText(), vista.txtMonto.getText(), vista.cbMercancia.isSelected(), estado,
					                      vista.txtCorreo.getText());
			   System.out.print("Mensaje " + mensaje);
			   
			   
			}else{
				System.out.println("Mensaje: " + mensaje);
			}
			if (mensaje.equals("")){
				this.vista.btnGuardar.setEnabled(false);
				
			}
			
			break;
			
		case "Buscar":
			this.vistaBusqueda.setVisible(true);
			break;
		}
	}

	private void accionCampos(boolean accion) {
		
			
			vista.txtCodigo.setEditable(accion);
			vista.txtCorreo.setEditable(accion);
			vista.txtDireccion.setEditable(accion);
			vista.txtIdentificacion.setEditable(accion);
			vista.txtLimite.setEditable(accion);
			vista.txtMonto.setEditable(accion);
			vista.txtNombre.setEditable(accion);
			vista.txtObservacion.setEditable(accion);
			vista.txtMonto.setEditable(accion);
			vista.txtRazonSocial.setEditable(accion);
			vista.cbxEstado.setEnabled(accion);
			vista.cbCredito.setEnabled(accion);
			vista.jcTContribuyente.setEnabled(accion);
			vista.jcTIdentificacion.setEnabled(accion);
			vista.txtTelefono.setEnabled(accion);
			vista.txtWeb.setEnabled(accion);
			vista.cbMercancia.setEnabled(accion);
	}

	@Override
	public void mouseClicked(MouseEvent arg0) {
		
		int filaSeleccionada;
		int idCliente;
		filaSeleccionada = vistaBusqueda.tbResultado.getSelectedRow();
		
		if(filaSeleccionada >= 0){
			idCliente = (int) this.vistaBusqueda.dtm.getValueAt(filaSeleccionada,0);
			System.out.println("Valores " + idCliente + ", " + filaSeleccionada);
			
			
		}
		
	}

	@Override
	public void mouseEntered(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mousePressed(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

}
